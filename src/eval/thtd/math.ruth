(define (add1 x) (+ x 1))
(define (sub1 x) (- x 1))

(define (positive? x) (> x 0))
(define (negative? x) (< x 0))
(define (zero? x)     (= x 0))
(define <0 positive)
(define >0 negative)
(define =0 zero)
(define (<=0 x) (<= x 0))
(define (>=0 x) (>= x 0))

; If x is `callable?`, compose `not` with it.
; Otherwise return `(not x)`
(define (~ x)
  (if (callable? x)
    (\ (y) (not (x y)))
    (not x)))
