(define (list? l) (or (nil? l) (and (pair? l) (list? (cdr l)))))
(define (exception? x)
  (and
    (list? x)
    (equal? '! (first x))))

(define null? nil?)

; i am sick of typoing this
(define equals? equal?)

(define (not-equal? . args) ((negate equal?) . args))
(define (equal-any? proto . checks) (any (\ (x) (equal? proto x)) checks))
(define (equal-any-of? . checks) (\ (proto) (equal-any? proto . checks)))
