(define (! name msger [data ()])
  (exception
    name
    (if (callable? msger) 
      (msger data) 
      msger)
    data))

(define-macro (with-handlers handlers body . bodies)
  (let ([bodies (cons body bodies)])
    (let loop ([handlers handlers])
      (if handlers
        `(with-handler ,(caar handlers) ,(cadar handlers) ,(loop (cdr handlers)))
        ; otherwise stick in the bodies into the last part
        `(do ,@bodies)))))

(define-macro (assert body 
  [name ''assert] ; why do we need double quotes? beats me! i think its because we eval the rhs of a default arg?
  [message false])
  `(let ([result ,body]) 
    (or result (! 
      ,name 
      (or ,message (string "assertion failed: " ',body " returned " result)) 
      result))))

(define (exn-name? sym [partial false])
  (if partial
    (\ (exn) (string-starts-with (symbol->string sym) (symbol->string (second exn))))
    (\ (exn) (equal? sym (second exn)))))
