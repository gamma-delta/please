(define peg/default-grammar '#{
  d (range "09")
  a (range "az" "AZ")
  w (range "az" "AZ" "09")
  s (set " \t\r\n\0\f\v")
  h (range "09" "af" "AF")
  D (if-not d 1)
  A (if-not a 1)
  W (if-not w 1)
  S (if-not s 1)
  H (if-not h 1)
  d+ (some d)
  a+ (some a)
  w+ (some w)
  s+ (some s)
  h+ (some h)
  d* (any d)
  a* (any a)
  w* (any w)
  s* (any s)
  h* (any h)

  <-integer (/ 'd+ read/integer)

  nl (* (? "\r") "\n")
})

(defun peg/match (peg str [default start 0] [default debug false])
  (if (peg? peg)
    (peg/match-inner peg str start debug)
    (peg/match-inner (peg/compile peg) str start debug)))

(defun peg? (x)
  (and (list? x) (>= (list/len x) 2) (equal? 'peg (first x)) (string? (second x))))
