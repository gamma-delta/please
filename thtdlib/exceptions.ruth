(define (! name msger [data ()])
  (exception
    name
    (if (callable? msger) 
      (msger data) 
      msger)
    data))

(define-macro (with-handlers handlers body . bodies)
  (let ([bodies (cons body bodies)])
    `(let ([res (catch (do ,@bodies))])
      (if ((~ exception?) res)
        res
        (let (
          [handled (find-map 
            (\ (pred-handler) (and ((first pred-handler) res) ((second pred-handler) res)))
            ,handlers)])
          (and handled res))))))

(define-macro (assert body 
  [name ''assert] ; why do we need double quotes? beats me! i think its because we eval the rhs of a default arg?
  [message false])
  `(let ([result ,body]) 
    (or result (! 
      ,name 
      (or ,message (string "assertion failed: " ',body " returned " result)) 
      result))))
